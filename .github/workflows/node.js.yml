name: Docker Build and Deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  DOCKER_IMAGE: "hamster_dev"
  DEPLOY_DIR: "/root/deploy/"
  CONTAINER_NAME: "hamster_dev"
  HOST_PORT: "3003"
  CONTAINER_PORT: "3003"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          docker build -t $DOCKER_IMAGE .
          docker images

      - name: Save Docker image
        run: |
          docker save $DOCKER_IMAGE | gzip > $DOCKER_IMAGE.tar.gz
          ls -lh

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: deployment-files
          path: |
            $DOCKER_IMAGE.tar.gz

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: deployment-files
          path: .

      - name: List downloaded files
        run: |
          ls -la

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/github_ci_cd_key
          chmod 600 ~/.ssh/github_ci_cd_key
          ssh-keyscan -H "${{ secrets.SERVER_IP }}" >> ~/.ssh/known_hosts

      - name: Copy files to remote server
        run: |
          scp -o StrictHostKeyChecking=no -i ~/.ssh/github_ci_cd_key $DOCKER_IMAGE.tar.gz ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:$DEPLOY_DIR

      - name: Deploy Docker image on remote server
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/github_ci_cd_key ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "
            cd $DEPLOY_DIR &&
            gzip -d -f $DOCKER_IMAGE.tar.gz &&
            docker stop $CONTAINER_NAME || true &&
            docker rm $CONTAINER_NAME || true &&
            docker load -i $DOCKER_IMAGE.tar &&
            docker run -d -p $HOST_PORT:$CONTAINER_PORT --name $CONTAINER_NAME $DOCKER_IMAGE
          "